color = "Personal Savings Rate")) +
labs(title = "Personal Savings Rate vs. Median Duration of Unemployment",
x = "Date",
y = NULL,
color = "")
shiny::runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
paths_allowed("https://collections.ed.ac.uk/art)")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
library(tidyverse)
library(robotstxt)
library(rvest)
paths_allowed("https://collections.ed.ac.uk/art)")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
source("~/Grinnell College/Semester 5/Data Science/Labs/lab8/scripts/01-scrape-page-one.R")
# Dataset
data <- matrix( sample(seq(1,2000),200), ncol = 10 )
rownames(data) <- paste0("sample_" , seq(1,20))
colnames(data) <- paste0("variable",seq(1,10))
# Euclidean distance
dist <- dist(data[ , c(4:8)] , diag=TRUE)
# Hierarchical Clustering with hclust
hc <- hclust(dist)
# Plot the result
plot(hc)
# Dataset
data <- matrix( sample(seq(1,2000),200), ncol = 10 )
rownames(data) <- paste0("sample_" , seq(1,20))
colnames(data) <- paste0("variable",seq(1,10))
# Euclidean distance
dist <- dist(data[ , c(4:8)] , diag=TRUE)
# Hierarchical Clustering with hclust
hc <- hclust(dist)
# Plot the result
plot(hc)
library(ggraph)
library(ggraph)
library(igraph)
library(tidyverse)
# create an edge list data frame giving the hierarchical structure of your individuals
d1 <- data.frame(from="origin", to=paste("group", seq(1,5), sep=""))
d2 <- data.frame(from=rep(d1$to, each=5), to=paste("subgroup", seq(1,25), sep="_"))
edges <- rbind(d1, d2)
# Create a graph object
mygraph <- graph_from_data_frame( edges )
# Basic tree
ggraph(mygraph, layout = 'dendrogram', circular = FALSE) +
geom_edge_diagonal() +
geom_node_point() +
theme_void()
library(ggraph)
library(igraph)
library(tidyverse)
# create an edge list data frame giving the hierarchical structure of your individuals
d1 <- data.frame(from="origin", to=paste("group", seq(1,5), sep=""))
d2 <- data.frame(from=rep(d1$to, each=2), to=paste("subgroup", seq(1,25), sep="_"))
library(ggraph)
library(igraph)
library(tidyverse)
# create an edge list data frame giving the hierarchical structure of your individuals
d1 <- data.frame(from="origin", to=paste("group", seq(1,5), sep=""))
d2 <- data.frame(from=rep(d1$to, each=5), to=paste("subgroup", seq(1,25), sep="_"))
edges <- rbind(d1, d2)
# Create a graph object
mygraph <- graph_from_data_frame( edges )
# Basic tree
ggraph(mygraph, layout = 'dendrogram', circular = FALSE) +
geom_edge_diagonal() +
geom_node_point() +
theme_void()
library(pvclust)
data(lung) # 916 genes for 73 subjects
set.seed(1234)
result <- pvclust(lung[1:100, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
pvrect(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
set.seed(1234)
result <- pvclust(lung[1:100, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
View(lung)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:1, 1:1], method.dist="cor",
method.hclust="average", nboot=10)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:2], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:5], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:8], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:32], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=10)
plot(result)
library(pvclust)
data(lung) # 916 genes for 73 subjects
#set.seed(1234)
result <- pvclust(lung[1:10, 1:10], method.dist="cor",
method.hclust="average", nboot=20)
plot(result)
library(tidyverse)
library(tidymodels)
library(openintro)
data(evals)
force(evals)
View(evals)
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram()
data(evals)
ggplot(evals,
aes(x = score,
fill = "blue")) +
geom_histogram()
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(aes(color = "blue"))
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(aes(stat = "identity",
color = "blue"))
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(aes(fill = "white"))
library(tidyverse)
library(tidymodels)
library(openintro)
library(ggplot2)
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(aes(fill = "white"))
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(fill = "white")
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(fill = "blue")
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(fill = "lightblue")
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_line()
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point()
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_jitter()
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_jitter()
?evals
score_bty_fit <- lm(score ~ bty_avg, evals)
score_bty_fit <- lm(score ~ bty_avg, evals)
print(score_bty_fit)
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_line()
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_smooth()
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_smooth(method = "lm",
se = F)
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
ggplot(evals,
aes(x = score,
y = bty_avg)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE,
color = "orange")
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_point()
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_jitter()
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE,
color = "orange")
score_bty_fit <- lm(score ~ bty_avg, evals)
print(score_bty_fit)
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE,
color = "orange")
glimpse(score_bty_fit)
(score_bty_fit)
library(tidyverse)
library(tidymodels)
library(openintro)
data(evals)
ggplot(evals,
aes(x = score)) +
geom_histogram(fill = "lightblue")
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_point()
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_jitter()
score_bty_fit <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ bty_avg,
evals) %>%
tidy()
(score_bty_fit)
ggplot(evals,
aes(x = bty_avg,
y = score)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE,
color = "orange")
(score_bty_fit)
glance(score_bty_fit)
glimpse(score_bty_fit)
glimpse(score_bty_fit)$r.squared
evals_eligible <- evals %>%
mutate(tenure_eligible =
case_when(rank == "teaching" ~ "no",
(rank == "tenure track"
||
rank == "tenure") ~ "yes"
))
View(evals_eligible)
score_bty_tenure_eligible <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ tenure_eligible) %>%
evals_eligible)
score_bty_tenure_eligible <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ tenure_eligible,
evals_eligible))
score_bty_tenure_eligible <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ tenure_eligible,
evals_eligible)
(score_bty_tenure_eligible)
glimpse(score_bty_fit)
glance(score_bty_fit)
library(tidyverse)
library(tidymodels)
library(openintro)
library(ggplot2)
library(dplyr)
glance(score_bty_fit)
library(tidyverse)
library(tidymodels)
library(openintro)
score_bty_gender <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ gender,
evals)
(score_bty_gender)
glance(score_bty_fit)
score_bty_gender <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ gender,
evals) %>%
tidy()
(score_bty_gender)
score_bty_fit <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ bty_avg,
evals) %>%
tidy()
glance(score_bty_fit)
score_bty_fit <- linear_reg() %>%
set_engine("lm") %>%
fit(score ~ bty_avg,
evals) %>%
tidy()
(score_bty_fit)
# score_bty_fit <- linear_reg() %>%
#                  set_engine("lm") %>%
#                  fit(score ~ bty_avg,
#                      evals) %>%
#                  tidy()
score_bty_fit <- lm(score ~ bty_avg,
evals)
(score_bty_fit)
glance(score_bty_fit)
glance(score_bty_fit)$r.squared
score_bty_rank_relevel <- lm(score ~ relevel(rank_relevel,
ref="tenure track"),
evals_relevel)
evals_relevel <- evals %>%
mutate(rank_relevel = rank)
score_bty_rank_relevel <- lm(score ~ relevel(rank_relevel,
ref="tenure track"),
evals_relevel)
(score_bty_rank_relevel)
score_bty_rank_relevel <- lm(score ~ relevel(rank_relevel,
ref="tenure track"),
evals_relevel)
(score_bty_rank_relevel)
glance(score_bty_rank_relevel)$r.squared
score_bty_tenure_eligible <- lm(score ~ tenure_eligible,
evals_eligible)
(score_bty_tenure_eligible)
score_bty_tenure_eligible <- lm(score ~ tenure_eligible,
evals_eligible)
(score_bty_tenure_eligible)
glance(score_bty_tenure_eligible)$r.squared
score_bty_fit <- lm(score ~ bty_avg,
evals)
library(tidyverse)
coffee_reviews <- read_csv("data/cleaned_coffee.csv")
coffee_avg <- read_csv("data/coffee_avg.csv")
coffee_reviews <- read_csv("data/cleaned_coffee.csv")
coffee_avg <- read_csv("data/coffee_avg.csv")
View(coffee_avg)
View(coffee_avg)
ggplot(coffee_avg,
x = Country.KG,
y = Total.Cup.Points.Avg.KG) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Total.Cup.Points.Avg,KG)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Total.Cup.Points.Avg.KG)
) +
geom_col()
shiny::runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG + Sweetness.Avg.KG)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG + Sweetness.Avg.KG)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
color = column())
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
fill = variable)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
fill = variable.names)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
fill = Countr.KG)
) +
geom_col()
ggplot(coffee_avg,
aes(x = Country.KG,
y = Clean.Cup.Avg.KG +
Sweetness.Avg.KG,
fill = Country.KG)
) +
geom_col()
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
install.packages(fmsb)
install.package(fmsb)
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
runApp('Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee')
View(coffee_avg)
View(coffee_reviews)
coffee_reviews <- read_csv("data/cleaned_coffee.csv")
coffee_avg <- read_csv("data/coffee_avg.csv")
all_data <- read_csv("data/arabica_data_cleaned.csv")
View(all_data)
View(all_data)
source("~/Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee/clean_coffee.R")
setwd("~/Grinnell College/Semester 5/Software Development/Coffee_Quality/coffee")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
